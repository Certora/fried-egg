version: 2.1

commands:
  restore_sccache_cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save_sccache_cache:
    steps:
      - save_cache:
          name: Save sccache cache
          # We use {{ epoch }} to always upload a fresh cache:
          # Of course, restore_cache will not find this exact key,
          # but it will fall back to the closest key (aka the most recent).
          # See https://discuss.circleci.com/t/add-mechanism-to-update-existing-cache-key/9014/13
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"
  install_cargo_deadlinks:
    steps:
      - run:
          name: Install cargo deadlinks
          command: |
            cargo install cargo-deadlinks
            cargo deadlinks --version
  build_fried_egg:
    steps:
      # Build with caching
      - run: apt-get update && apt-get install -y cmake
      - restore_sccache_cache
      - run: cargo build --release
      - save_sccache_cache


jobs:
  test:
    docker:
      - image: &rust rust:1.84
    steps:
      - checkout
      - build_fried_egg

      # Run tests
      - run:
          command: |
            rustup update
            cargo test --release --all-targets
  
  # Based on nits checking for egg: https://github.com/egraphs-good/egg/blob/main/Makefile
  nits:
    docker:
      - image: *rust
    steps:
      - checkout
      - build_fried_egg
      - install_cargo_deadlinks
      - run:
          name: check nits using clippy and deadlinks
          command: |
            rustup update
            rustup component add rustfmt clippy
            cargo fmt -- --check
            cargo clean --doc
            cargo doc --no-deps
            cargo deadlinks
            cargo clippy


workflows:
  build-test:
    jobs:
      - test
      - nits
