{
  "params": {
    "seed": 0,
    "n_samples": 0,
    "variables": 3,
    "outfile": "out.json",
    "no_constant_fold": false,
    "iters": 3,
    "rules_to_take": 18446744073709551615,
    "node_chunk_size": 100000,
    "eq_chunk_size": 18446744073709551615,
    "no_constants_above_iter": 1,
    "no_conditionals": true,
    "no_run_rewrites": false,
    "linear_cvec_matching": false,
    "ema_above_iter": 2,
    "disabled_ops": null,
    "disabled_consts": null,
    "filtered_consts": null,
    "keep_all": false,
    "eqsat_node_limit": 300000,
    "eqsat_iter_limit": 2,
    "eqsat_time_limit": 60,
    "important_cvec_offsets": 7,
    "str_int_variables": 1,
    "complete_cvec": false,
    "no_xor": false,
    "no_shift": false,
    "num_fuzz": 0,
    "use_smt": true,
    "do_final_run": false,
    "prior_rules": null,
    "workload": null
  },
  "time": 7462.261556583,
  "num_rules": 356,
  "smt_unknown": 0,
  "all_eqs": [
    {
      "lhs": "(boolif (s<= ?bit256d ?bit256c) ?boolb ?boola)",
      "rhs": "(boolif (s< ?bit256c ?bit256d) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (>= ?bit256d ?bit256c) ?boolb ?boola)",
      "rhs": "(boolif (> ?bit256c ?bit256d) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold (bitif ?boold ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(bitif ?boold ?bit256c ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolc ?bit256d (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256d ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boold (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(bitif (&& ?boolc ?boold) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif (|| ?boolc ?boold) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc (bitif ?boold ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif (! ?boolc) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "rhs": "(bitif (! ?boolc) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (|| ?boolb ?boola))",
      "rhs": "(|| ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (| ?bit256b ?bit256a))",
      "rhs": "(| ?bit256b (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(&& ?boolc (&& ?boolb ?boola))",
      "rhs": "(&& ?boolb (&& ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256c (+ ?bit256b ?bit256a))",
      "rhs": "(+ ?bit256b (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256c (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256a (- ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(* ?bit256c (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256a (* ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(& ?bit256a (& ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boolc (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boolb (bool== ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(- (- ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(- (- ?bit256c ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(- ?bit256c (+ ?bit256b ?bit256a))",
      "rhs": "(- (- ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (+ ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(+ ?bit256b (- ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (- ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (|| ?boolc ?boolb) ?boola)",
      "rhs": "(|| ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boola ?boolc (&& ?boolb ?boola))",
      "rhs": "(&& ?boola ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(&& ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(&& ?boolb ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(|| ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(|| ?boola ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (bool== ?boolb ?boolc) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (&& ?boolb ?boolc) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(~ (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(bitif ?boolc (~ ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(boolif ?boolb (|| ?boola ?boolc) ?boolc)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(|| ?boolc (boolif ?boolb ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (|| ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(&& ?boolc (|| ?boolb ?boola))",
      "rhs": "(&& ?boolc (boolif ?boola ?boolc ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (&& ?boolb ?boola))",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (! ?boola))",
      "rhs": "(boolif ?boolc ?boolb (bool== ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (bit== ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boola (boolif ?boolc ?boola ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(>= (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& ?boolc (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& ?boolc (s< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(&& ?boolc (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(&& ?boolc (s< ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (! ?boola))",
      "rhs": "(bool== ?boolc (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (&& ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boola (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boolc ?boolb) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolc ?boolb) ?boolc ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boolb ?boolc) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boola ?boolc) ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256b (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (bit== ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (bit== ?bit256c ?bit256b) ?bit256c ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolc (& ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(& ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (|| ?boolb ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256c (~ (- ?bit256b ?bit256a)))",
      "rhs": "(+ (~ ?bit256b) (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256a ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256c ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256a ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256c ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256a ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256b ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256b ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256c ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256b ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256b ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256c ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc (boolif ?boolc ?boola ?boolb) ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (boolif ?boolc ?boolb ?boola) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(& (| ?bit256b ?bit256c) (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256c (| ?bit256b ?bit256a))",
      "rhs": "(& ?bit256c (| ?bit256b (& ?bit256a ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(+ (* ?bit256c ?bit256b) (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256b (+ ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(| ?bit256c (& ?bit256a (| ?bit256b ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(- (* ?bit256b ?bit256c) (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256b (- ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(boolif (boolif ?boolc ?boolb ?boola) ?boolb ?boolc)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boola ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(&& ?boolc (|| ?boola ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolb ?boolc ?boola) ?boolb ?boola)",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(&& ?boolc (bit== ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(! (&& (! ?boolc) (> ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif ?boola (boolif ?boolc ?boolb ?boola) ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolb ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boola (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb ?boola (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (&& ?boola ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolc ?boolb ?boola) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolc ?boola ?boolb) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (boolif ?boola ?boolc ?boolb) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (boolif ?boola ?boolc ?boolb) ?boola)",
      "rhs": "(boolif ?boola (boolif ?boolb ?boolc ?boola) ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolb ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif ?boolc ?boolb (boolif ?boolb ?boolc ?boola))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (~ (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (~ (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(| ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (& ?bit256c (& ?bit256b ?bit256a)))",
      "rhs": "(>= (& ?bit256c (& ?bit256b ?bit256a)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(+ ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== (& ?bit256c ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256c ?bit256a) (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256c (- ?bit256b ?bit256a)))",
      "rhs": "(bit== (& ?bit256b ?bit256c) (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(| ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "(> ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(| (& ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "rhs": "(& (| ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256a ?bit256b) (+ ?bit256b ?bit256a))",
      "rhs": "(> ?bit256b (~ ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(> (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(&& ?boolc (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(&& ?boolc (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256b (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b (+ ?bit256a ?bit256a))",
      "rhs": "(+ ?bit256a (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc (- ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(- (bitif ?boolc ?bit256a (+ ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc (+ ?bit256a ?bit256a) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(+ ?bit256b (bitif ?boolc ?bit256a (- ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256c ?bit256a) (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (> ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (> ?bit256c ?bit256b) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256b ?bit256c) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif (s<= ?bit256b ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256c ?bit256a) (>= ?bit256b ?bit256a))",
      "rhs": "(>= (bitif (>= ?bit256b ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256c ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256c (bitif (s< ?bit256b ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (s< ?bit256c ?bit256b) (s< ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (> ?bit256b ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (> ?bit256c ?bit256b) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256b ?bit256a) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (>= ?bit256c ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256b ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(> ?bit256a (bitif ?boolc ?bit256b (+ ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif ?boolb ?bit256a (~ ?bit256a)))",
      "rhs": "(> ?bit256c (bitif ?boolb ?bit256a (+ ?bit256a ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256b (bitif ?boolc (<< ?bit256b ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b (>> ?bit256b ?bit256a)))",
      "rhs": "(>= ?bit256b (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s<= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (s< ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s< ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "rhs": "(&& ?boolc (> (>> ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (>= ?bit256c ?bit256a) (> ?bit256c ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (>= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256c ?bit256a) (>= ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (> ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (> ?bit256b ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256b ?bit256c) (s< ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif (s<= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256c (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (s<= ?bit256c ?bit256a) (s< ?bit256c ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s<= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (s< ?bit256c ?bit256a) (s< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (> ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s< ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s< (bitif (s< ?bit256b ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(>= (bitif (>= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(>= (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s< ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s< (bitif (s< ?bit256c ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(> (bitif (> ?bit256b ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (bitif (>= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(>= (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(s<= (bitif (s<= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s<= (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>> (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(>> (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (bit== ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (bit== ?bit256c ?bit256b) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(* ?bit256c (bitif ?boolb (* ?bit256a ?bit256a) ?bit256a))",
      "rhs": "(* ?bit256a (bitif ?boolb (* ?bit256a ?bit256c) ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (- ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(>= ?bit256b (bitif ?boolc (- ?bit256a ?bit256b) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (s<= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256c (bitif (>= ?bit256a ?bit256c) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (>= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256c (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (s<= ?bit256b ?bit256a) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (bitif ?boolc (- ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(| ?bit256a (- ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (bitif ?boolc ?bit256a (- ?bit256b ?bit256a)))",
      "rhs": "(| ?bit256a (- ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (<< ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bit== (<< ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(<< (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(<< (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (>> ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "(>= (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (bitif ?boolc ?bit256b (<< ?bit256a ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(bit== ?bit256b (>> ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(s< (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(s< ?bit256b (>> ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(> ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s<= ?bit256b (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc (<< ?bit256b ?bit256b) ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif ?boolc (+ ?bit256b ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (& ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (bitif ?boolc ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(s<= (& ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b (& ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< (| ?bit256b (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (& ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(- (| ?bit256b (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (| ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc ?bit256a ?bit256b) (& ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif ?boolc ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(s< (& ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< (& ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(> (| ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (bitif ?boolc ?bit256a ?bit256b) (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256b ?bit256a) (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (> ?bit256a ?bit256b) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(& ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(| (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(| ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(+ (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(+ ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(> (& ?bit256a ?bit256c) (| ?bit256b ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc ?bit256b (- ?bit256b ?bit256a)))",
      "rhs": "(bitif ?boolc 0 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(- (bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "rhs": "(bitif ?boolc ?bit256b 0)",
      "bidirectional": false
    },
    {
      "lhs": "(+ ?bit256b (bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ (+ ?bit256a ?bit256b) (bitif ?boolc ?bit256b 0))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc (- ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ (- ?bit256b ?bit256a) (bitif ?boolc ?bit256b 0))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(> 1 (bitif ?boolc ?bit256a (- ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (+ ?bit256a (bitif ?boolb ?bit256a 0)))",
      "rhs": "(bit== ?bit256a (bitif ?boolb (- ?bit256c ?bit256a) ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc ?bit256a (+ ?bit256b ?bit256a)))",
      "rhs": "(> 1 (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b ?bit256a)",
      "rhs": "(| ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(+ ?bit256b ?bit256a)",
      "rhs": "(+ ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boolb ?boola)",
      "rhs": "(bool== ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b ?bit256a)",
      "rhs": "(bit== ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(&& ?boolb ?boola)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(|| ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(* ?bit256b ?bit256a)",
      "rhs": "(* ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(s>= ?bit256b ?bit256a)",
      "rhs": "(s<= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(<= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(< ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s> ?bit256b ?bit256a)",
      "rhs": "(s< ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb ?boola ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolb ?bit256a ?bit256a)",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boola ?boolb ?boola)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(boolif ?boola ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(! (>= ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b ?bit256a)",
      "rhs": "(! (s<= ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b ?bit256a)",
      "rhs": "(! (s< ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(! (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (~ ?bit256b) ?bit256a)",
      "rhs": "(s<= (~ ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256b (~ ?bit256a))",
      "rhs": "(> ?bit256a (~ ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(s< (~ ?bit256b) ?bit256a)",
      "rhs": "(s< (~ ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (~ ?bit256a))",
      "rhs": "(>= ?bit256a (~ ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "?bit256b",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (- ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (! ?boola) ?boola)",
      "rhs": "(bool== ?boolb (! ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(~ (& ?bit256b (~ ?bit256a)))",
      "rhs": "(| ?bit256a (~ ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(& ?bit256a (~ ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(>= (~ ?bit256b) ?bit256a)",
      "rhs": "(>= (+ ?bit256b ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (| ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(& ?bit256b (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (<< ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (<< ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (<< ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(s<= (| ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (& ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(s< (| ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (- ?bit256b (~ ?bit256b)) ?bit256a)",
      "rhs": "(s< (+ ?bit256b ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (- ?bit256a (~ ?bit256a)))",
      "rhs": "(> ?bit256b (+ ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256a ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (>= ?bit256b ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (s<= ?bit256a ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (s<= ?bit256b ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (>= ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (>= ?bit256a ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (| ?bit256b (~ ?bit256a)))",
      "rhs": "(bit== ?bit256b (| ?bit256a (~ ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (s<= ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (~ (| ?bit256b ?bit256a)))",
      "rhs": "(bit== (~ ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (~ ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(bit== (| ?bit256b ?bit256a) (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256b (+ ?bit256a (<< ?bit256b ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256b (- ?bit256a (<< ?bit256b ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(>= ?bit256b (| ?bit256a (>> ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256b ?bit256a)",
      "rhs": "(+ (& ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (| ?bit256b (>> ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (& ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (+ ?bit256b (>> ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (| ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (bit== ?bit256b ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (> ?bit256a ?bit256b) (bit== ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b (~ ?bit256a))",
      "rhs": "(> (& ?bit256b ?bit256a) (+ ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> (>> ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(>> (>> ?bit256a (| ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256b (& ?bit256a (- ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (>> ?bit256b (| ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (<< ?bit256a ?bit256a))",
      "rhs": "(>= (| ?bit256a ?bit256b) (<< ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (| ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& (s< ?bit256b ?bit256a) (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b (<< (<< ?bit256b ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (<< (<< ?bit256b ?bit256a) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(- (* ?bit256b ?bit256b) (* ?bit256a ?bit256a))",
      "rhs": "(* (+ ?bit256a ?bit256b) (- ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (>> (& ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(bit== ?bit256b (& ?bit256a (>> ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "(+ (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (<< (>> ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "rhs": "(+ ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(>= (>> (>> ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (+ ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(+ (<< ?bit256a ?bit256a) (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(| (<< ?bit256a ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(+ (<< ?bit256a ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| (<< ?bit256b ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(+ (<< ?bit256b ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(>= (>> (>> ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| (>> ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "rhs": "(+ (>> ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (| ?bit256b (<< ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a (+ ?bit256b (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b (& ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(+ ?bit256b (& ?bit256a (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b (| ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(s<= ?bit256b (+ ?bit256a (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(>= ?bit256a (>> ?bit256b (- ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif true ?boolb ?boola)",
      "rhs": "?boolb",
      "bidirectional": false
    },
    {
      "lhs": "(boolif false ?boolb ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(bitif true ?bit256b ?bit256a)",
      "rhs": "?bit256b",
      "bidirectional": false
    },
    {
      "lhs": "(bitif false ?bit256b ?bit256a)",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolb ?boola false)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(boolif ?boola true ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (& ?bit256b ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a (~ (>> ?bit256b ?bit256a)))",
      "rhs": "(>> ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": false
    },
    {
      "lhs": "(& (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& (& ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> (| ?bit256a (>> ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a (| ?bit256a (>> ?bit256b ?bit256a)))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> ?bit256a (>> ?bit256b ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& (<< ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= (| ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (& ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (>> (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256a (| ?bit256b ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (& ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (& ?bit256b (+ ?bit256a ?bit256a)))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256a (& ?bit256a (+ ?bit256b ?bit256a)))",
      "rhs": "(> (& ?bit256b ?bit256a) 0)",
      "bidirectional": true
    },
    {
      "lhs": "(| (+ ?bit256b ?bit256b) (+ ?bit256a ?bit256a))",
      "rhs": "(* 2 (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(* 2 (& ?bit256b ?bit256a))",
      "rhs": "(& (+ ?bit256b ?bit256b) (+ ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (<< (>> ?bit256b ?bit256a) ?bit256a) ?bit256a)",
      "rhs": "(> (- 0 (>> ?bit256b ?bit256a)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(~ (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(& ?bit256a ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(+ ?bit256a (<< ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a (>> ?bit256a (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a (>> (<< ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> (<< ?bit256a ?bit256a) ?bit256a)",
      "rhs": "(& ?bit256a (>> (<< ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(& ?bit256a (>> ?bit256a (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boola ?boola)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "?boola",
      "rhs": "(bool== true ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "?bit256a",
      "rhs": "(/ ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(- ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(+ 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(* 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(& 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(~ ?bit256a)",
      "rhs": "(- 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bool== false ?boola)",
      "rhs": "(! ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256a ?bit256a)",
      "rhs": "(* 2 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (~ ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (~ ?bit256a))",
      "rhs": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a 0)",
      "rhs": "(s< ?bit256a (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(> (~ ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 0 ?bit256a)",
      "rhs": "(> (+ ?bit256a ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (~ ?bit256a) (* ?bit256a ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(>= ?bit256a (~ (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(> ?bit256a (- ?bit256a (~ ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (<< ?bit256a ?bit256a) (~ ?bit256a))",
      "rhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (<< (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> ?bit256a (+ ?bit256a ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a 0)",
      "rhs": "(s< ?bit256a (>> (+ ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 1 ?bit256a)",
      "rhs": "(> (- (<< ?bit256a ?bit256a) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a 0)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(> 0 ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(* 0 ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& 0 ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(- 0 ?bit256a)",
      "rhs": "(* 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(s< ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256a 1)",
      "rhs": "(> ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 1 ?bit256a)",
      "rhs": "(s< 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(+ 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a 1)",
      "rhs": "(+ 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 0)",
      "rhs": "(s< ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 1)",
      "rhs": "(s< ?bit256a 2)",
      "bidirectional": true
    },
    {
      "lhs": "(>= 1 ?bit256a)",
      "rhs": "(> 2 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== 0 ?bit256a)",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256a 2)",
      "rhs": "(> ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 0 ?bit256a)",
      "rhs": "(s< 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 2 ?bit256a)",
      "rhs": "(s< 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= 0 ?bit256a)",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boola false true)",
      "rhs": "(! ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 0 ?bit256a)",
      "rhs": "(s< (- 0 ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(>= (- (~ 1) ?bit256a) ?bit256a)",
      "bidirectional": true
    }
  ],
  "new_eqs": [
    {
      "lhs": "(boolif (s<= ?bit256d ?bit256c) ?boolb ?boola)",
      "rhs": "(boolif (s< ?bit256c ?bit256d) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (>= ?bit256d ?bit256c) ?boolb ?boola)",
      "rhs": "(boolif (> ?bit256c ?bit256d) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold (bitif ?boold ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(bitif ?boold ?bit256c ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolc ?bit256d (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256d ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boold (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(bitif (&& ?boolc ?boold) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif (|| ?boolc ?boold) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boold ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc (bitif ?boold ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif (! ?boolc) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "rhs": "(bitif (! ?boolc) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (|| ?boolb ?boola))",
      "rhs": "(|| ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (| ?bit256b ?bit256a))",
      "rhs": "(| ?bit256b (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(&& ?boolc (&& ?boolb ?boola))",
      "rhs": "(&& ?boolb (&& ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256c (+ ?bit256b ?bit256a))",
      "rhs": "(+ ?bit256b (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256c (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256a (- ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(* ?bit256c (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256a (* ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(& ?bit256a (& ?bit256b ?bit256c))",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boolc (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boolb (bool== ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(- (- ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(- (- ?bit256c ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(- ?bit256c (+ ?bit256b ?bit256a))",
      "rhs": "(- (- ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (+ ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(+ ?bit256b (- ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (- ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (|| ?boolc ?boolb) ?boola)",
      "rhs": "(|| ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boola ?boolc (&& ?boolb ?boola))",
      "rhs": "(&& ?boola ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(&& ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(&& ?boolb ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(|| ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(|| ?boola ?boolc)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (bool== ?boolb ?boolc) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (&& ?boolb ?boolc) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(~ (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(bitif ?boolc (~ ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(boolif ?boolb (|| ?boola ?boolc) ?boolc)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(|| ?boolc (boolif ?boolb ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (|| ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(&& ?boolc (|| ?boolb ?boola))",
      "rhs": "(&& ?boolc (boolif ?boola ?boolc ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (&& ?boolb ?boola))",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (! ?boola))",
      "rhs": "(boolif ?boolc ?boolb (bool== ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (bit== ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (bool== ?boolb ?boola))",
      "rhs": "(bool== ?boola (boolif ?boolc ?boola ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(>= (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& ?boolc (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif ?boolc ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& ?boolc (s< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(&& ?boolc (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(&& ?boolc (s< ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc ?boolb (! ?boola))",
      "rhs": "(bool== ?boolc (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (&& ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boola (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boolc ?boolb) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolc ?boolb) ?boolc ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boolb ?boolc) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boola ?boolc) ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256b (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256b (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (bit== ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (bit== ?bit256c ?bit256b) ?bit256c ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (bool== ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolc (& ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(& ?bit256a (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (|| ?boolb ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256c (~ (- ?bit256b ?bit256a)))",
      "rhs": "(+ (~ ?bit256b) (+ ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256a ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256c ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256a ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256c ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256a ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256b ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256b ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (> ?bit256c ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256c ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256b ?bit256c) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (s<= ?bit256b ?bit256c) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256c ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolc (boolif ?boolc ?boola ?boolb) ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolc ?boolb ?boola)",
      "rhs": "(boolif ?boolc (boolif ?boolc ?boolb ?boola) ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(& (| ?bit256b ?bit256c) (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256c (| ?bit256b ?bit256a))",
      "rhs": "(& ?bit256c (| ?bit256b (& ?bit256a ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(+ (* ?bit256c ?bit256b) (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256b (+ ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256c (& ?bit256b ?bit256a))",
      "rhs": "(| ?bit256c (& ?bit256a (| ?bit256b ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(- (* ?bit256b ?bit256c) (* ?bit256b ?bit256a))",
      "rhs": "(* ?bit256b (- ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (&& ?boolb ?boola))",
      "rhs": "(boolif (boolif ?boolc ?boolb ?boola) ?boolb ?boolc)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boola ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(&& ?boolc (|| ?boola ?boolb))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolb ?boolc ?boola) ?boolb ?boola)",
      "rhs": "(&& ?boolb (|| ?boola ?boolc))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(&& ?boolc (bit== ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b ?bit256a))",
      "rhs": "(! (&& (! ?boolc) (> ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif ?boola (boolif ?boolc ?boolb ?boola) ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolb ?boola ?boolc) ?boolb ?boola)",
      "rhs": "(&& ?boola (boolif ?boolc ?boolb ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb ?boola (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (&& ?boola ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolc ?boolb ?boola) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif (boolif ?boolc ?boola ?boolb) ?boolb ?boola)",
      "rhs": "(boolif (bool== ?boolb ?boolc) ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif (boolif ?boola ?boolc ?boolb) ?boolb ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (boolif ?boola ?boolc ?boolb) ?boola)",
      "rhs": "(boolif ?boola (boolif ?boolb ?boolc ?boola) ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolb ?boolc (boolif ?boolc ?boolb ?boola))",
      "rhs": "(boolif ?boolc ?boolb (boolif ?boolb ?boolc ?boola))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (~ (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (~ (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(| ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (& ?bit256c (& ?bit256b ?bit256a)))",
      "rhs": "(>= (& ?bit256c (& ?bit256b ?bit256a)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(+ ?bit256a (bitif ?boolc (~ ?bit256a) ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== (& ?bit256c ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256c ?bit256a) (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256c (- ?bit256b ?bit256a)))",
      "rhs": "(bit== (& ?bit256b ?bit256c) (| ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(| ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "(> ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(| (& ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b ?bit256a)",
      "rhs": "(& (| ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif ?boolc ?bit256a ?bit256b) (+ ?bit256b ?bit256a))",
      "rhs": "(> ?bit256b (~ ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(> (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(&& ?boolc (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(&& ?boolc (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256b (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256b (+ ?bit256a ?bit256a))",
      "rhs": "(+ ?bit256a (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc (- ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(- (bitif ?boolc ?bit256a (+ ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc (+ ?bit256a ?bit256a) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(+ ?bit256b (bitif ?boolc ?bit256a (- ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256c ?bit256a) (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (> ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (> ?bit256c ?bit256b) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256b ?bit256c) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif (s<= ?bit256b ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256c ?bit256a) (>= ?bit256b ?bit256a))",
      "rhs": "(>= (bitif (>= ?bit256b ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256c ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256c (bitif (s< ?bit256b ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (s< ?bit256c ?bit256b) (s< ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (> ?bit256b ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (> ?bit256c ?bit256b) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256b ?bit256a) (> ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (>= ?bit256c ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256b ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (bitif ?boolc ?bit256b (~ ?bit256a)))",
      "rhs": "(> ?bit256a (bitif ?boolc ?bit256b (+ ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif ?boolb ?bit256a (~ ?bit256a)))",
      "rhs": "(> ?bit256c (bitif ?boolb ?bit256a (+ ?bit256a ?bit256c)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b (bitif ?boolc (~ ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256b (bitif ?boolc (<< ?bit256b ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolc (>= ?bit256b (>> ?bit256b ?bit256a)))",
      "rhs": "(>= ?bit256b (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s<= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (s< ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s< ?bit256c ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= (bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "rhs": "(&& ?boolc (> (>> ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256c (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (>= ?bit256c ?bit256a) (> ?bit256c ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (>= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (> ?bit256c ?bit256a) (>= ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (> ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (> ?bit256b ?bit256a) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (s<= ?bit256b ?bit256c) (s< ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (bitif (s<= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256c (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(&& (s<= ?bit256c ?bit256a) (s< ?bit256c ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s<= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(&& (s< ?bit256c ?bit256a) (s< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256c) (>= ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (bitif (> ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s< ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s< (bitif (s< ?bit256b ?bit256c) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(>= (bitif (>= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(>= (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif (s< ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s< (bitif (s< ?bit256c ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> (bitif (> ?bit256c ?bit256b) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(> (bitif (> ?bit256b ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (bitif (>= ?bit256b ?bit256a) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(>= (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(s<= (bitif (s<= ?bit256b ?bit256c) ?bit256c ?bit256b) ?bit256a)",
      "rhs": "(s<= (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256c) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>> (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(>> (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (bit== ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (bit== ?bit256c ?bit256b) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(* ?bit256c (bitif ?boolb (* ?bit256a ?bit256a) ?bit256a))",
      "rhs": "(* ?bit256a (bitif ?boolb (* ?bit256a ?bit256c) ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (- ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(>= ?bit256b (bitif ?boolc (- ?bit256a ?bit256b) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (s<= ?bit256a ?bit256c) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (s<= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256c (bitif (>= ?bit256a ?bit256c) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (>= ?bit256a ?bit256b) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256c (bitif (s<= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (s<= ?bit256b ?bit256a) ?bit256c ?bit256a))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (bitif ?boolc (- ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(| ?bit256a (- ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (bitif ?boolc ?bit256a (- ?bit256b ?bit256a)))",
      "rhs": "(| ?bit256a (- ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (<< ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bit== (<< ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(<< (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(<< (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (>> ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "(>= (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (bitif ?boolc ?bit256b (<< ?bit256a ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(bit== ?bit256b (>> ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)) ?bit256a)",
      "rhs": "(s< (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b (>> (bitif ?boolc ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(s< ?bit256b (>> ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(> ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (>> ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< ?bit256a (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b (>> ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s<= ?bit256b (>> (bitif ?boolc ?bit256a ?bit256b) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc (<< ?bit256b ?bit256b) ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif ?boolc (+ ?bit256b ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(bit== ?bit256a (& ?bit256b (bitif ?boolc ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (bitif ?boolc ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(s<= (& ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b (& ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< (| ?bit256b (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (& ?bit256a (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(- (| ?bit256b (bitif ?boolc ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (| ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(- (bitif ?boolc ?bit256a ?bit256b) (& ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (bitif ?boolc ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "rhs": "(s< (& ?bit256b ?bit256a) (bitif ?boolc ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (| ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(s< (& ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a (& ?bit256b (bitif ?boolc ?bit256b ?bit256a)))",
      "rhs": "(> (| ?bit256a (bitif ?boolc ?bit256a ?bit256b)) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(>= (bitif ?boolc ?bit256a ?bit256b) (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256b ?bit256a) (bitif ?boolc ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (bitif (>= ?bit256c ?bit256a) ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (bitif (> ?bit256a ?bit256b) ?bit256a ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(& (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(& ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(| (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(| ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(+ (bitif ?boolc ?bit256a ?bit256b) (bitif ?boolc ?bit256b ?bit256a))",
      "rhs": "(+ ?bit256b ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(> (& ?bit256a ?bit256c) (| ?bit256b ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc ?bit256b (- ?bit256b ?bit256a)))",
      "rhs": "(bitif ?boolc 0 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(- (bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "rhs": "(bitif ?boolc ?bit256b 0)",
      "bidirectional": false
    },
    {
      "lhs": "(+ ?bit256b (bitif ?boolc (+ ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ (+ ?bit256a ?bit256b) (bitif ?boolc ?bit256b 0))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256b (bitif ?boolc (- ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ (- ?bit256b ?bit256a) (bitif ?boolc ?bit256b 0))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "rhs": "(> 1 (bitif ?boolc ?bit256a (- ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256c (+ ?bit256a (bitif ?boolb ?bit256a 0)))",
      "rhs": "(bit== ?bit256a (bitif ?boolb (- ?bit256c ?bit256a) ?bit256c))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (bitif ?boolc ?bit256a (+ ?bit256b ?bit256a)))",
      "rhs": "(> 1 (bitif ?boolc (- ?bit256b ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b ?bit256a)",
      "rhs": "(| ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(+ ?bit256b ?bit256a)",
      "rhs": "(+ ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boolb ?boola)",
      "rhs": "(bool== ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b ?bit256a)",
      "rhs": "(bit== ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(&& ?boolb ?boola)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(|| ?boola ?boolb)",
      "bidirectional": false
    },
    {
      "lhs": "(* ?bit256b ?bit256a)",
      "rhs": "(* ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(s>= ?bit256b ?bit256a)",
      "rhs": "(s<= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(<= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(< ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s> ?bit256b ?bit256a)",
      "rhs": "(s< ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb ?boola ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(bitif ?boolb ?bit256a ?bit256a)",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boola ?boolb ?boola)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(boolif ?boola ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(! (>= ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256b ?bit256a)",
      "rhs": "(! (s<= ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b ?bit256a)",
      "rhs": "(! (s< ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(! (> ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (~ ?bit256b) ?bit256a)",
      "rhs": "(s<= (~ ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256b (~ ?bit256a))",
      "rhs": "(> ?bit256a (~ ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(s< (~ ?bit256b) ?bit256a)",
      "rhs": "(s< (~ ?bit256a) ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (~ ?bit256a))",
      "rhs": "(>= ?bit256a (~ ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "?bit256b",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (- ?bit256a ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boolb (! ?boola) ?boola)",
      "rhs": "(bool== ?boolb (! ?boola))",
      "bidirectional": true
    },
    {
      "lhs": "(~ (& ?bit256b (~ ?bit256a)))",
      "rhs": "(| ?bit256a (~ ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(& ?bit256a (~ ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(>= (~ ?bit256b) ?bit256a)",
      "rhs": "(>= (+ ?bit256b ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- (| ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(& ?bit256b (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256b (<< ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256b (<< ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (<< ?bit256a ?bit256b))",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (| ?bit256b ?bit256a))",
      "rhs": "(>= (& ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(s<= (| ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (& ?bit256b ?bit256a))",
      "rhs": "(bit== ?bit256a (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a (& ?bit256b ?bit256a))",
      "rhs": "(s< (| ?bit256b ?bit256a) ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= (- ?bit256b (~ ?bit256b)) ?bit256a)",
      "rhs": "(s< (+ ?bit256b ?bit256b) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (- ?bit256a (~ ?bit256a)))",
      "rhs": "(> ?bit256b (+ ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bitif (>= ?bit256a ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (>= ?bit256b ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (s<= ?bit256a ?bit256b) ?bit256b ?bit256a)",
      "rhs": "(bitif (s<= ?bit256b ?bit256a) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (>= ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (>= ?bit256a ?bit256b) ?bit256a ?bit256b)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (| ?bit256b (~ ?bit256a)))",
      "rhs": "(bit== ?bit256b (| ?bit256a (~ ?bit256b)))",
      "bidirectional": false
    },
    {
      "lhs": "(bitif (s<= ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "rhs": "(bitif (s< ?bit256b ?bit256a) ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (~ (| ?bit256b ?bit256a)))",
      "rhs": "(bit== (~ ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (~ ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(bit== (| ?bit256b ?bit256a) (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256b (+ ?bit256a (<< ?bit256b ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b ?bit256a)",
      "rhs": "(& ?bit256b (- ?bit256a (<< ?bit256b ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b ?bit256a)",
      "rhs": "(>= ?bit256b (| ?bit256a (>> ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256b ?bit256a)",
      "rhs": "(+ (& ?bit256b ?bit256a) (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (| ?bit256b (>> ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (& ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (+ ?bit256b (>> ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b ?bit256a)",
      "rhs": "(> (| ?bit256b (- ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (bit== ?bit256b ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(|| (> ?bit256a ?bit256b) (bit== ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256a ?bit256b)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b (~ ?bit256a))",
      "rhs": "(> (& ?bit256b ?bit256a) (+ ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> (>> ?bit256a ?bit256b) ?bit256a)",
      "rhs": "(>> (>> ?bit256a (| ?bit256a ?bit256b)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (- ?bit256b ?bit256a))",
      "rhs": "(- ?bit256b (& ?bit256a (- ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256b ?bit256a))",
      "rhs": "(>= ?bit256b (>> ?bit256b (| ?bit256a ?bit256b)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (<< ?bit256a ?bit256a))",
      "rhs": "(>= (| ?bit256a ?bit256b) (<< ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< (| ?bit256b ?bit256a) ?bit256a)",
      "rhs": "(&& (s< ?bit256b ?bit256a) (> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(|| (>= ?bit256b ?bit256a) (s<= ?bit256b ?bit256a))",
      "rhs": "(s<= ?bit256b (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256b (<< (<< ?bit256b ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (<< (<< ?bit256b ?bit256a) ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(+ ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(- (* ?bit256b ?bit256b) (* ?bit256a ?bit256a))",
      "rhs": "(* (+ ?bit256a ?bit256b) (- ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256b (>> (& ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(bit== ?bit256b (& ?bit256a (>> ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "(+ (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(& ?bit256a (<< (>> ?bit256a ?bit256b) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "rhs": "(+ ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(>= (>> (>> ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (+ ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(+ (<< ?bit256a ?bit256a) (| ?bit256a ?bit256b))",
      "bidirectional": true
    },
    {
      "lhs": "(| (<< ?bit256a ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(+ (<< ?bit256a ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(| (<< ?bit256b ?bit256b) (& ?bit256b ?bit256a))",
      "rhs": "(+ (<< ?bit256b ?bit256b) (& ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "(>= (>> (>> ?bit256a ?bit256b) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| (>> ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "rhs": "(+ (>> ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (| ?bit256b (<< ?bit256b ?bit256a)))",
      "rhs": "(& ?bit256a (+ ?bit256b (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256b (& ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(+ ?bit256b (& ?bit256a (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256b (| ?bit256a (<< ?bit256b ?bit256a)))",
      "rhs": "(s<= ?bit256b (+ ?bit256a (<< ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(>= ?bit256a (>> ?bit256b (- ?bit256b ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(boolif true ?boolb ?boola)",
      "rhs": "?boolb",
      "bidirectional": false
    },
    {
      "lhs": "(boolif false ?boolb ?boola)",
      "rhs": "?boola",
      "bidirectional": false
    },
    {
      "lhs": "(bitif true ?bit256b ?bit256a)",
      "rhs": "?bit256b",
      "bidirectional": false
    },
    {
      "lhs": "(bitif false ?bit256b ?bit256a)",
      "rhs": "?bit256a",
      "bidirectional": false
    },
    {
      "lhs": "(boolif ?boolb ?boola false)",
      "rhs": "(&& ?boola ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(|| ?boolb ?boola)",
      "rhs": "(boolif ?boola true ?boolb)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256b (| ?bit256b ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (& ?bit256b ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a (~ (>> ?bit256b ?bit256a)))",
      "rhs": "(>> ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": false
    },
    {
      "lhs": "(& (>> ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& (& ?bit256a ?bit256b) (<< ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> (| ?bit256a (>> ?bit256a ?bit256b)) ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a (| ?bit256a (>> ?bit256b ?bit256a)))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> ?bit256a (>> ?bit256b ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (>> ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256a (<< (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& ?bit256b (<< ?bit256b (| ?bit256b ?bit256a)))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& (<< ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= (| ?bit256a ?bit256b) (>> ?bit256b ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (& ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (>> (| ?bit256a ?bit256b) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256b (>> ?bit256a (| ?bit256b ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (& ?bit256b (<< ?bit256a ?bit256a)))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (& ?bit256b (+ ?bit256a ?bit256a)))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256a (& ?bit256a (+ ?bit256b ?bit256a)))",
      "rhs": "(> (& ?bit256b ?bit256a) 0)",
      "bidirectional": true
    },
    {
      "lhs": "(| (+ ?bit256b ?bit256b) (+ ?bit256a ?bit256a))",
      "rhs": "(* 2 (| ?bit256b ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(* 2 (& ?bit256b ?bit256a))",
      "rhs": "(& (+ ?bit256b ?bit256b) (+ ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(> (<< (>> ?bit256b ?bit256a) ?bit256a) ?bit256a)",
      "rhs": "(> (- 0 (>> ?bit256b ?bit256a)) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(~ (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(& ?bit256a ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(+ ?bit256a (<< ?bit256a ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a (>> ?bit256a (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| ?bit256a (>> (<< ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> (<< ?bit256a ?bit256a) ?bit256a)",
      "rhs": "(& ?bit256a (>> (<< ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(>> ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(& ?bit256a (>> ?bit256a (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bool== ?boola ?boola)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "?boola",
      "rhs": "(bool== true ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(> ?bit256a ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "?bit256a",
      "rhs": "(/ ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(- ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(| 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(+ 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(* 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "?bit256a",
      "rhs": "(& 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>> ?bit256a ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(~ ?bit256a)",
      "rhs": "(- 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bool== false ?boola)",
      "rhs": "(! ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(+ ?bit256a ?bit256a)",
      "rhs": "(* 2 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (~ ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(| ?bit256a (~ ?bit256a))",
      "rhs": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a 0)",
      "rhs": "(s< ?bit256a (~ ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(s< 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(> (~ ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(bit== ?bit256a (<< ?bit256a ?bit256a))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 0 ?bit256a)",
      "rhs": "(> (+ ?bit256a ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (~ ?bit256a) (* ?bit256a ?bit256a))",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(>= ?bit256a (~ (<< ?bit256a ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(s< ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(> ?bit256a (- ?bit256a (~ ?bit256a)))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== (<< ?bit256a ?bit256a) (~ ?bit256a))",
      "rhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": true
    },
    {
      "lhs": "(& ?bit256a (<< (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a (>> ?bit256a (+ ?bit256a ?bit256a)))",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(s< ?bit256a 0)",
      "rhs": "(s< ?bit256a (>> (+ ?bit256a ?bit256a) ?bit256a))",
      "bidirectional": true
    },
    {
      "lhs": "(bit== ?bit256a (<< (+ ?bit256a ?bit256a) ?bit256a))",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 1 ?bit256a)",
      "rhs": "(> (- (<< ?bit256a ?bit256a) ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(| 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "bidirectional": false
    },
    {
      "lhs": "(>= ?bit256a 0)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "true",
      "bidirectional": false
    },
    {
      "lhs": "(> 0 ?bit256a)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(> ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "false",
      "bidirectional": false
    },
    {
      "lhs": "(* 0 ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(& 0 ?bit256a)",
      "rhs": "0",
      "bidirectional": false
    },
    {
      "lhs": "(- 0 ?bit256a)",
      "rhs": "(* 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(s< ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256a 1)",
      "rhs": "(> ?bit256a 0)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 1 ?bit256a)",
      "rhs": "(s< 0 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "rhs": "(+ 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(>= ?bit256a 115792089237316195423570985008687907853269984665640564039457584007913129639935)",
      "bidirectional": true
    },
    {
      "lhs": "(- ?bit256a 1)",
      "rhs": "(+ 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 0)",
      "rhs": "(s< ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= ?bit256a 1)",
      "rhs": "(s< ?bit256a 2)",
      "bidirectional": true
    },
    {
      "lhs": "(>= 1 ?bit256a)",
      "rhs": "(> 2 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(bit== 0 ?bit256a)",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= ?bit256a 2)",
      "rhs": "(> ?bit256a 1)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 0 ?bit256a)",
      "rhs": "(s< 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 2 ?bit256a)",
      "rhs": "(s< 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(>= 0 ?bit256a)",
      "rhs": "(> 1 ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(boolif ?boola false true)",
      "rhs": "(! ?boola)",
      "bidirectional": true
    },
    {
      "lhs": "(s< 0 ?bit256a)",
      "rhs": "(s< (- 0 ?bit256a) ?bit256a)",
      "bidirectional": true
    },
    {
      "lhs": "(s<= 115792089237316195423570985008687907853269984665640564039457584007913129639935 ?bit256a)",
      "rhs": "(>= (- (~ 1) ?bit256a) ?bit256a)",
      "bidirectional": true
    }
  ],
  "old_eqs": []
}